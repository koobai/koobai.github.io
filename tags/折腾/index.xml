<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>折腾 on 空白生活</title><link>https://koobai.com/tags/%E6%8A%98%E8%85%BE/</link><description>Recent content in 折腾 on 空白生活</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 20 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://koobai.com/tags/%E6%8A%98%E8%85%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>Github Action 自动构建 Hugo, 并通过 Webhook 同步到宝塔指定目录</title><link>https://koobai.com/posts/webhooks/</link><pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate><guid>https://koobai.com/posts/webhooks/</guid><description>折腾博客的乐趣就是不停的折腾，一个评论插件就搞来搞去的，为此还特意买了轻量服务器，索性也把 Hugo 搬过去。只是原先自动同步到腾讯 COS 就不可用，而且域名还指定了境外访问路径，导致更新博客的流程变得非常复杂。最终通过 Google，总算解决：本地提交 hugo 源码到 Github，自动触发构建并同步到宝塔指定的网站目录。
部署步骤流程记录下：
1. 在 Github 的 Hugo 源码仓库根目录，新建&amp;quot;.github/workflows/xxx.yml 文件，复制以下代码。作用：借助 Github Action 实现自动构建，并同步到另外一个仓库。其中 &amp;ldquo;PERSONAL_TOKEN&amp;rdquo; 为另外仓库的访问密钥；&amp;ldquo;external_repository&amp;rdquo; 为另外仓库地址。
name: Githubblog on: workflow_dispatch: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;latest&amp;#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.PERSONAL_TOKEN }} external_repository: koobai/koobai.</description></item><item><title>Apple TV 4K (第二代) 使用体验</title><link>https://koobai.com/posts/appletv/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://koobai.com/posts/appletv/</guid><description>购买背景 自己喜欢观影，为了方便直接使用奈飞 (Netflix)，在2020年时购入了 Google TV，一直使用得不错。直到买了群晖，在折腾影视串流的过程中，发现大家都推荐 Infuse 这款软件。一番了解，确实很不错，支持市面上所有的视频、音频格式，年订阅9.9美元，最主要的是串流的海报墙太美了～～。唯一的缺陷就是只支持 Apple 生态，其他都好说，本身电脑手机Pad都是Apple，但最主要的电视观影工具 Google TV 使不上呀。纠结很久，实在受不了Infuse的诱惑，于是淘宝了一台 Apple TV 4k (第 2 代)。
连接方式 Apple TV 连 Soundba 音响ARC接口 &amp;gt; Soundba 连电视eARC接口，这样就可以，画面由电视显示、声音由Soundba输出。
使用感受 2022年1月3号买的，目前也使用了一年多时间，整体感受就是一分钱一分货，比之前的 Google TV 不管是流畅度、系统美观度，完全都不是一个量级。特别喜欢铝制一体成型的遥控器，非常有质感，就是冬天使用冰手。
由于家里的智能设备也通过HomeKit控制，Apple TV 插着直流电，也就充当作为智能中枢使用。另外有台电视不支持杜比视界，可以使用机器配合iPhone给电视屏幕校色。
目前TV中，常用的App：
1. Netflix 买这些盒子最初的需求就是为了能使用Netflix，喜欢它的一点：剧集基本上都是一次性放出，看起来非常爽。每年都有那么几部好看的，如：暗黑、怪奇物语、风骚律师、纸房子，最近很火的黑暗荣耀。但每个月的订阅费确实不便宜，咬牙坚持几个月后，上了合租车。
2. Youtube 关注了自己喜欢的几个频道，在电视上看还是很爽的，特别是订阅了会员之后，无广告。之前印度区一个月也就6块钱，最近开始涨价，再下去可能又得找合租车了。
3. Infuse 买 Apple TV 就是因为它。通过WebDAV的方式，串联起Docker应用Alist，观影起来确实方便。到期之后，又订阅了一年，只能说Apple生态必备。
4. Synology Photos 群晖此应用最近才上架Apple TV，现在各个终端设备齐全了，一家人坐在电视前浏览照片还是很爽的。不过浏览视频的时候，需要在软件设置中开启HTTP播放，否则无法浏览。
5. Cheers Bilibili第三方客户端，目前可加入作者的TestFlight。自己很少看Bilibili，一般是找什么教程的时候，上去搜索下。
另外还有HBOMAX、Disnep+、Apple TV应用，但都必须得订阅，全部加一起还是不少费用，所以直接通过Alist串流阿里云盘观看自己想看的。
总结 由于自己喜欢观影，使用下来，这笔投资还是很划算。而且此类设备可多年不更新，所以性价比一下子就上来了。目前唯一的痛点就是，观看国内的爱奇艺、腾讯、优酷得退回电视系统，使用体验的割裂感就很强了，当然这个跟Apple TV没关系。
当时买的是64G版本，也不知道怎么想的，按照现在的使用情景，完全没必要，32足已。</description></item><item><title>Synology 群晖 DS920+ 使用之旅</title><link>https://koobai.com/posts/synology/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://koobai.com/posts/synology/</guid><description>购买过程 记不清是从什么时候开始了解NAS的，2021年4月买过一台群晖DS220+，使用几天发现折腾起来非常麻烦，直接给退了。时间来到2021年末，了解到极空间Z4，于是买回来试试，发现系统极其易用，非常喜欢。但没用几天，品牌宣布发布新款。。。，于是退了老款，等新款发售。上架之后，第一时间下单，不知为何拷贝外接硬盘内容会断连，联系品牌工程师，一番测试也无法解决，只能选择退货。京东填写退货理由是质量问题，品牌售后联系说只能选七天无理由退货，如果选择质量问题，必须退回厂里先检测，无问题就原路返回有问题就给退换。。。。京东使用了这么多年，第一次遇到品牌这种操作，一下子对极空间的好感度降至零点，退了之后就不考虑了。
回到重新选择NAS上，了解了下威联通，性价比不错，但系统界面实在是无法欣赏，只能放弃。最后好像能选的品牌也就群晖了，基于一步到位原则，咬咬牙直接在淘宝授权商购自一台DS920+～～
周边搭配 机器到位，对应的搭配组合：1.送的一条4g内存、一套防尘罩。2.三块希捷酷狼4T硬盘。3.两条三星250g SSD。4.山特850 UPS不间断电源。
折腾之旅 准备就绪，经过一年多的折腾及稳定运行使用，满足了自己需求：数据备份、影视存储。目前主要使用的套件：
1. 存储管理器 三块硬盘使用逻辑：两块组Raid 1，一块Basic。重要数据存储在Raid上；极为重要数据，再通过Hyper Backup套件定期自动备份到Basic硬盘上，再定期备份到外置硬盘。影视、mac系统备份，存储到Basic硬盘上。
两条ssd,作为Raid 1的读写缓存。
2. Synology Drive 群晖的核心套件。电脑中日常工作存储文件夹通过Synology Drive连接，保存修改的同时自动同步备份到群晖。目前使用的笔记类应用也是选择直接存储本地的，这样就能实时备份到群晖，如：Typora、妙言。再通过WebDAV方式连接访问，以供其他终端设备显示。
3. Synology Photos 相册套件，跟Eileen两个人的手机，实时自动备份。套件的共享空间功能，能实时相互分享喜欢的照片。整体使用起来跟系统相册应用没什么差别。
4. File Station 这好像没什么说的，类似于mac下的访达、win下的我的电脑，必用套件。
5. 迅雷 只要你是会员，下载速度还是杠杠的，有些资源电脑版本无法下载，但套件能下～～。很多人会用PD、PT，然后通过Docker应用自动触发下载，发现自己平常也用不上。
6. Docker 使用NAS前不知道什么是Docker，使用之后，只能说没了它，乐趣要少一大半～～目前使用的应用为 4 个：
1. Alist 官方介绍：一个支持多种存储的文件列表程序。自己使用主要的作用是影视中转站：先把资源存储到阿里云盘 &amp;gt; Alist连接阿里云盘 &amp;gt; Infuse通过WebDAV方式连接Alist，之后就愉快的观影。
2. Ddns-go 由于运营商的公网IP会实时变化，通过它可自动获取自己的公网IP，并解析到对应的域名上。外网访问NAS必备。
3. Homeassistant 家里接入了不少小米系的智能设备，日常除了使用米家控制之外，可通过Homeassistant接入HomeKit。如果是苹果的全家桶用户，使用起来非常方便，特别是打开app的速度比米家快了不知道有多少。
4. Vaultwarden 密码管理工具，Bitwarden的轻量应用。数据存储本地，全平台使用，再也不用记该死的密码了。
总结 1.机器是真吸灰尘，放置环境为电视柜，在有防尘网的前提下，也必须是几个月停机清理一次。
2.硬盘运行的炒豆子声音，可能因为硬盘容量小、转速不高、机器下面也垫了缓存垫，且在有门隔绝的前提下，基本上可以忽略不计。
3.是不是应该使用四盘位，自己使用的情况看，发现是性能过剩了，220其实已满足需求。
一年多使用下来，机器很满意。但目前市场上NAS品牌越来越多，如华为、绿联等，以群晖的高售价低配置，曾经“买系统送机器”的流传打趣，性价比越来越低，升级款923，还是万年不变的千兆网口～～～</description></item><item><title>Hugo主题实现自适应布局, 及自定义字体</title><link>https://koobai.com/posts/responsive/</link><pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate><guid>https://koobai.com/posts/responsive/</guid><description>做事情的三分钟热度继续中，完善了博客的归档、标签云、平常观看的影视页面及文章页评论、标签等功能。由于当下移动设备为我们主要的浏览窗口，所以页面需考虑在对应的终端设备中实际的浏览体验。
简单直接的方法，在页面样式表中添加@media，并在对应的尺寸范围中完善所需的样式：
@media (max-width:700px){ /* 浏览器宽度尺寸小于700所呈现的样式 */ } @media screen and (min-width:700px) and (max-width:900px){ /* 浏览器宽度尺寸大于700小于900所呈现的样式 */ } @media (min-width:900px){ /* 浏览器宽度尺寸大于700所呈现的样式 */ } /* 根据每个页面实际的呈现需要，调整尺寸或自适应的分段需求 */ 详细参数及解释参考：利用@media screen实现网页布局的自适应
扩展 之前文章中提到标题采用了&amp;quot;得意黑&amp;quot;开源字体，记录下如何自定义字体，在样式文件中添加：
@font-face { font-family: SmileySans; /* 名称自定义 */ src: url(&amp;#39;../fonts/SmileySans-Oblique.ttf.woff2&amp;#39;) format(&amp;#39;woff2&amp;#39;); /* 建议采用woff2格式，以降低容量大小，提高加载速度 */ } 之后在需要调用此字体的样式文件中直接使用:
body { font-family: SmileySans; } 结尾 博客所需的，整体折腾得差不多了，过程很有趣及兴奋，就连大年三十都在乐此不疲的折腾着～～。随着这个年也已过完，接下来的重点也是2023年重点，努力挣钱～挣钱～～挣钱～～～加油。</description></item><item><title>Hugo主题添加暗黑(夜间)模式, 并自动切换</title><link>https://koobai.com/posts/dark/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://koobai.com/posts/dark/</guid><description>继续完善博客主题风格，折腾过程，备份记录留档。由于自己已习惯把终端设备外观设置成自动切换浅色或深色模式，为了夜间浏览体验，博客应该支持暗黑(夜间)模式。
以hugo关键词搜索主题应该怎么适配，相关资料很少，尝试到绝望之际，换成了英文关键词，最终Atanas Yonkov的&amp;quot;Adding Dark Mode to Hugo&amp;ldquo;拯救了自己，根据其教程，添加成功。虽不完美，但已实现，纠结两个问题：
1.暗黑模式下，点击链接加载都会白一下再变暗。
2.不会根据终端设备模式自动切换，需要手动点击。
尝试搜索解决，无果。之后发现WorkPlusFE&amp;rsquo;s Blog的&amp;rdquo;Dark Mode&amp;ldquo;教程，又是一番折腾，最终完美解决。最简单直接方式：在hugo样式文件中（如：style.scss）添加
@media (prefers-color-scheme: dark) { /* 暗黑模式下css样式, 如: */ body { background: #1A1718; } } 完善暗黑模式下的样式属性之后，终端设备在深色模式下会自动调用渲染主题暗黑模式下的样式表，反之浅色模式下就调用默认样式。
扩展 当然如果要做好暗黑模式，并不是简单的反黑白，需要不断尝试样式的各个配色方案，以寻求夜间浏览的实际体验。不过图片可以采用降低透明度的方式来缓解夜间过亮刺眼的问题：
@media (prefers-color-scheme: dark) { img { filter: brightness(0.8) contrast(1.2); } } 感悟 由于自己并不懂技术，折腾博客过程中，想实现或者解决某一想法或问题时，都需要通过搜索引擎查阅大量的资料，花大把时间，最终才能勉强得以解决或者继续无解。这就是折腾过程中的乐趣，特别是实现或解决成功的那个兴奋欣慰感～～</description></item><item><title>Github自动构建Hugo, 并同步到腾讯COS, 同时刷新CDN缓存</title><link>https://koobai.com/posts/tencentcos/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://koobai.com/posts/tencentcos/</guid><description>博客逐步搭建完善，更新了日常使用的App、硬件页面。博客样式标题采用了&amp;quot;得意黑&amp;ldquo;开源字体。把二级域名改成一级，过程中发现Cloudflare Pages如果要绑定一级，须把域名的DNS服务器解析过去。解析之后，自己的nas访问变得不稳定，时不时的打不开，来来回回折腾了好几次，无解，只好改回去。 vercel可以绑定一级，尝试之后，访问速度太慢，放弃。开始了解国内的云服务，学习到了对象储存、CDN，经过一番对比尝试，最终选择腾讯云的COS对象存储配合内容分发网络CDN搭建(主要它的cosbrowser界面是经过设计的ᵔ◡ᵔ；客服也很负责，咨询问题会电话打过来详细教你如何操作)。
在了解部署过程中发现Cyrus&amp;rsquo;s Blog写的&amp;rdquo;自动构建Hugo博客部署至腾讯云对象存储COS并刷新CDN&amp;ldquo;教程，一番折腾，完美。感谢作者。
备份记录下过程: (详细的注释可查看Cyrus&amp;rsquo;s Blog)
准备工作： 1.到腾讯云访问管理——访问密钥——API密钥管理中，新建一个账户：访问方式改为&amp;quot;编程访问&amp;rdquo;，用户权限添加&amp;quot;QcloudCOSDataFullControl、 QcloudCDNFullAccess&amp;quot;。完成之后将生成的SecretId、SecretKey复制保存。
2.到Github新建一个仓库(私有公共都行)，把自己hugo生成的站点源文件(不是public下文件)同步过去。
3.在刚创建的仓库——Settings——Secrets and variables——Actions，新建SecretId、SecretKey、Bucket、 Region四个密钥。其中SecretId、SecretKey为上面复制保存的，Bucket(存储桶名称)、 Region(所属地域 )在COS中存储桶列表中获取。
部署: 1.在Github仓库根目录，新建&amp;quot;.github/workflows&amp;quot;文件夹，并新建xxx.yml文件，复制以下代码到文件里。作用：借助Github Action实现自动部署。
name: Build and deploy # 自动触发构建 on: push: branches: - main # 构建hugo及生产静态页面 jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;latest&amp;#39; extended: true - name: Build run: hugo --minify # 上传到腾讯COS存储桶 - name: Setup Python uses: actions/setup-python@v4 with: python-version: 3.</description></item></channel></rss>